possum_mf = [
    0,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    1,
]

possum_total = [
    89,
    91,
    95,
    92,
    85,
    90,
    89,
    91,
    91,
    89,
    89,
    92,
    89,
    91,
    85,
    86,
    89,
    90,
    90,
    89,
    96,
    91,
    89,
    84,
    91,
    90,
    85,
    87,
    88,
    84,
    93,
    94,
    89,
    85,
    85,
    88,
    82,
    80,
    75,
    84,
    77,
    81,
    81,
    89,
    85,
    85,
    88,
    85,
    93,
    91,
    91,
    92,
    93,
    93,
    91,
    96,
    88,
    86,
    90,
    88,
    89,
    88,
    86,
    85,
    88,
    88,
    87,
    90,
    80,
    82,
    83,
    89,
    89,
    84,
    81,
    81,
    84,
    85,
    82,
    81,
    80,
    92,
    86,
    93,
    87,
    84,
    85,
    89,
    85,
    82,
    84,
    88,
    83,
    86,
    84,
    86,
    81,
    82,
    89,
    82,
    89,
]


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

possum_df = pd.DataFrame([possum_mf, possum_total]).T  # create df and transpose

possum_df_alt = pd.DataFrame(
    zip(possum_mf, possum_total)
)  # instead of transpose, can zip together

possum_df.columns = ["gender", "length_cm"]  # rename columns

possum_gender_dict = {0: "male", 1: "female"}
possum_df["gender"] = possum_df["gender"].map(possum_gender_dict).astype(str)

sns.histplot(data=possum_df, x="length_cm", hue="gender")
plt.show()  # show plot (sns uses pyplot)

print(possum_df.dtypes)  # see overview
print(possum_df.head(10))  # see first 10 rows of df

# use pandas groupby and agg funcs to get mean and stdev for each gender
agg_possums = possum_df.groupby("gender")["length_cm"].agg([np.mean, np.std])
print(agg_possums)


# using 1 fstring print statement, format specifiers, newline \n:
print(
    f"Females are, on average, "
    f"{(agg_possums['mean'].loc['female'] - agg_possums['mean'].loc['male']):.2f}"
    f"cm longer than males. \nHowever, the spread of the data (STDEV) is "
    f"{agg_possums['std'].loc['female']:.1f} compared to "
    f"{agg_possums['std'].loc['male']:.1f} of the males."
)

# check for nan
print(f"\nNaN check:\n{possum_df.isna().sum()}")

# see what kind of values
print(f"\nN unique:\n{possum_df.nunique()}")
